[{"/Users/sayongja/Desktop/Diary-Today-Girok/src/index.js":"1","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/login/login.jsx":"2","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card_add_form/card_add_form.jsx":"3","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/emotion/emotion.jsx":"4","/Users/sayongja/Desktop/Diary-Today-Girok/src/app.jsx":"5","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card_edit_form/card_edit_form.jsx":"6","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/header/header.jsx":"7","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/diary/diary.jsx":"8","/Users/sayongja/Desktop/Diary-Today-Girok/src/service/firebase.js":"9","/Users/sayongja/Desktop/Diary-Today-Girok/src/service/image_uploader.js":"10","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/button/button.jsx":"11","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/modal/modal.jsx":"12","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/maker/maker.jsx":"13","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/feel/feel.jsx":"14","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/editor/editor.jsx":"15","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card/card.jsx":"16","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/preview/preview.jsx":"17"},{"size":798,"mtime":1629913909507,"results":"18","hashOfConfig":"19"},{"size":2042,"mtime":1629913909506,"results":"20","hashOfConfig":"19"},{"size":4283,"mtime":1629913909504,"results":"21","hashOfConfig":"19"},{"size":436,"mtime":1629913909505,"results":"22","hashOfConfig":"19"},{"size":665,"mtime":1629918547257,"results":"23","hashOfConfig":"19"},{"size":5333,"mtime":1629913909504,"results":"24","hashOfConfig":"19"},{"size":498,"mtime":1629913909506,"results":"25","hashOfConfig":"19"},{"size":869,"mtime":1629913909505,"results":"26","hashOfConfig":"19"},{"size":735,"mtime":1629918390981,"results":"27","hashOfConfig":"19"},{"size":387,"mtime":1629913909507,"results":"28","hashOfConfig":"19"},{"size":231,"mtime":1629913909504,"results":"29","hashOfConfig":"19"},{"size":1126,"mtime":1629913909506,"results":"30","hashOfConfig":"19"},{"size":4112,"mtime":1629913909506,"results":"31","hashOfConfig":"19"},{"size":778,"mtime":1629913909505,"results":"32","hashOfConfig":"19"},{"size":1528,"mtime":1629913909505,"results":"33","hashOfConfig":"19"},{"size":676,"mtime":1629913909504,"results":"34","hashOfConfig":"19"},{"size":2168,"mtime":1629913909507,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"e6qolf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sayongja/Desktop/Diary-Today-Girok/src/index.js",[],["73","74"],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/login/login.jsx",[],["75","76"],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card_add_form/card_add_form.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/emotion/emotion.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/app.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card_edit_form/card_edit_form.jsx",["77"],"import React, { memo, useCallback, useState } from 'react';\nimport Button from '../button/button';\nimport Dropdown from '../dropdown/dropdown';\nimport Feel from '../feel/feel';\nimport Modal from '../modal/modal';\nimport styles from './card_edit_form.module.css';\n\nconst CardEditForm = memo(\n  ({ FileInput, card, cards, updateDay, updateCard, deleteCard, month }) => {\n    const { date, message, fileName, emotion } = card;\n    const [feelOpen, setfeelOpen] = useState(false);\n    const [openDay, setOpenDay] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [SelectDay, setSelectDay] = useState();\n    const [currentEvent, setCurrentEvent] = useState();\n    const getdate = new Date();\n    const year = getdate.getFullYear();\n    const day = new Date(year, month, 0).getDate();\n    let currentEmotion = '';\n\n    const onFileChange = useCallback(\n      (file) => {\n        updateCard({\n          ...card,\n          fileName: file.name,\n          fileURL: file.url,\n        });\n      },\n      [updateCard, card]\n    );\n\n    const onUpdateEmotion = (e) => {\n      updateCard({\n        ...card,\n        [e]: currentEmotion,\n      });\n    };\n\n    const onChange = useCallback(\n      (event, date, newId, beforeId) => {\n        if (event.target.value === null) {\n          console.log(event.target);\n          return;\n        }\n\n        event.preventDefault();\n        let value = event.target.value;\n        let currentId = `${year}${month}${value}`;\n        date\n          ? updateDay({\n              // 일기의 날짜수정을 변경할 때\n              ...card,\n              [date]: value,\n              [newId]: currentId,\n              [beforeId]: card.id,\n            })\n          : updateCard({\n              // 일기의 Text를 변경할 때\n              ...card,\n              [event.target.name]: value,\n            });\n      },\n      [card, month, updateDay, updateCard, year]\n    );\n\n    const onSubmit = useCallback(() => {\n      deleteCard(card);\n    }, [deleteCard, card]);\n\n    const showDayList = useCallback(() => {\n      if (openDay === true) {\n        setOpenDay(false);\n      } else {\n        setOpenDay(true);\n      }\n    }, [openDay]);\n\n    const showModal = useCallback(\n      (event, date, newId, beforeId) => {\n        setCurrentEvent(event);\n        let value = event.target.value;\n        let currentId = `${year}${month}${value}`;\n        const cardsToArr = Object.entries(cards);\n\n        for (let i = 0; i < cardsToArr.length; i++) {\n          if (cardsToArr[i][1].id === currentId) {\n            setSelectDay(value);\n            setOpenModal(true);\n            return;\n          }\n        }\n        onChange(event, date, newId, beforeId);\n      },\n      [cards, month, onChange, year]\n    );\n\n    const closeModal = useCallback(() => {\n      setOpenModal(false);\n    }, []);\n\n    const allowUpdate = useCallback(() => {\n      onChange(currentEvent, 'date', 'id', 'beforeId');\n      setOpenModal(false);\n    }, [currentEvent, onChange]);\n\n    const handleFeelComponent = () => {\n      showFeelComponent('open');\n    };\n\n    const showFeelComponent = useCallback((value) => {\n      if (value === 'open') {\n        setfeelOpen(true);\n      } else {\n        setfeelOpen(false);\n      }\n    }, []);\n\n    const changeEmotion = useCallback((newEmotion) => {\n      currentEmotion = newEmotion;\n      onUpdateEmotion('emotion');\n    }, []);\n\n    return (\n      <>\n        {feelOpen && (\n          <div className={styles.container}>\n            <Feel\n              changeEmotion={changeEmotion}\n              showFeelComponent={showFeelComponent}\n            ></Feel>\n          </div>\n        )}\n        <form className={styles.form}>\n          {openModal && (\n            <Modal\n              showEditFormModal={closeModal}\n              currentDay={SelectDay}\n              allowUpdate={allowUpdate}\n            ></Modal>\n          )}\n          <div className={styles.date}>\n            <h1>오늘은</h1>\n            <div\n              className={`${styles.dateContainer} ${\n                openDay && styles.clickDay\n              }`}\n              onClick={showDayList}\n            >\n              <ul className={styles.dropDown}>\n                {openDay &&\n                  [...Array(day)].map((num, index) => (\n                    <Dropdown\n                      key={index}\n                      showDayList={showDayList}\n                      index={index}\n                      value={'dayEdit'}\n                      onChange={showModal}\n                    ></Dropdown>\n                  ))}\n              </ul>\n              <span className={styles.dayText}>{`${date} 일`}</span>\n            </div>\n          </div>\n\n          <div className={styles.select}>\n            <span\n              className={styles.selectEmotion}\n              onClick={handleFeelComponent}\n            >\n              {emotion}\n            </span>\n          </div>\n          <textarea\n            className={styles.textarea}\n            name=\"message\"\n            value={message}\n            onChange={onChange}\n          />\n          <div className={styles.fileInput}>\n            <FileInput name={fileName} onFileChange={onFileChange} />\n          </div>\n          <Button name=\"Delete\" onClick={onSubmit} />\n        </form>\n      </>\n    );\n  }\n);\n\nexport default CardEditForm;\n","/Users/sayongja/Desktop/Diary-Today-Girok/src/components/header/header.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/diary/diary.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/service/firebase.js",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/service/image_uploader.js",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/button/button.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/modal/modal.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/maker/maker.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/feel/feel.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/editor/editor.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/card/card.jsx",[],"/Users/sayongja/Desktop/Diary-Today-Girok/src/components/preview/preview.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":119,"column":24,"nodeType":"86","endLine":119,"endColumn":34},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"react-hooks/exhaustive-deps","Assignments to the 'currentEmotion' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Identifier","no-global-assign","no-unsafe-negation"]